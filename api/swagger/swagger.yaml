swagger: "2.0"
info:
  version: "0.0.1"
  title: Backend for AtlasCV
host: localhost:10013
basePath: /
schemes:
  # tip: remove http to make production-grade
  - http
  - https
consumes:
  - application/json
  - text/html
  - application/x-www-form-urlencoded
produces:
  - application/json
  - text/html
# securityDefinitions:
#   applicantsAndEmployers:
#     name: Authorization
#     type: apiKey
#     in: header
#     description: applicants and employers
#   applicantsOnly:
#     name: Authorization
#     type: apiKey
#     in: header
#     description: applicant accounts only
#   employersOnly:
#     name: Authorization
#     type: apiKey
#     in: header
#     description: employer accounts only
#   anyUser:
#     name: Authorization
#     type: apiKey
#     in: header
#     description: any user
#   admin:
#     name: Authorization
#     type: apiKey
#     in: header
#     description: AtlasCV admin account
#   adminAndEmployers:
#     name: Authorization
#     type: apiKey
#     in: header
#     description: AtlasCV admins and employers
paths:
  /applicants:
    x-swagger-router-controller: applicants
    get:
      description: Get all applicants
      operationId: getAllApplicants
      responses:
        "200":
          description: Successfully return all applicants
          schema:
            type: object
        "500":
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      x-swagger-router-controller: applicants
      description: Creates a new applicant
      operationId: createApplicant
      parameters:
        - name: data
          in: body
          description: data required to create an applicant
          required: true
          schema:
            type: object
            required:
              - firstName
              - lastName
              - email
            properties:
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
      responses:
        "201":
          description: Successfully create a new applicant
          schema:
            type: object
        "500":
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /applicants/{applicantId}:
    x-swagger-router-controller: applicants
    get:
      description: Get all applicants
      operationId: getApplicantById
      parameters:
        - name: applicantId
          in: path
          description: id of the applicant being retrieved
          required: true
          type: string
      responses:
        "200":
          description: Successfully return applicant by id
          schema:
            type: object
        "500":
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      description: update an existing applicant
      operationId: updateApplicant
      parameters:
      - name: applicantId
        in: path
        description: id of the applicant being updated
        required: true
        type: string
      - name: data
        in: body
        description: data required to create an applicant
        required: true
        schema:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string
            city:
              type: string
            profilePhoto:
              type: string
            transcript:
              type: string
            aboutMe:
              type: string
            gender:
              type: string
            phone:
              type: string
            birthday:
              type: string
            profileImgUrl:
              type: string
            password:
              type: string
      responses:
        "200":
          description: Successfully update an existing applicant
          schema:
            type: object
        "500":
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /applicants/{applicantId}/skills:
    post:
      x-swagger-router-controller: skills
      description: Adds a skill for an applicant
      operationId: addSkillsToApplicant
      parameters:
        - name: applicantId
          in: path
          description: id of the applicant's skills being added
          required: true
          type: string
        - name: data
          in: body
          description: data required to create an applicant
          required: true
          schema:
            type: object
            required:
              - skills
            properties:
              skills:
                type: array
                items:
                  type: object
                  properties: 
                    id:
                      type: number
                    experience:
                      type: string
      responses:
        "201":
          description: Successfully create a new applicant
          schema:
            type: object
        "500":
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /applicants/{applicantId}/industries:
    post:
      x-swagger-router-controller: industries
      description: Adds a desired industries for an applicant
      operationId: addIndustriesToApplicant
      parameters:
        - name: applicantId
          in: path
          description: id of the applicant's skills being added
          required: true
          type: string
        - name: data
          in: body
          description: data required to create an applicant
          required: true
          schema:
            type: object
            required:
              - industryIds
            properties:
              industryIds:
                type: array
                items:
                  type: number
      responses:
        "201":
          description: Successfully create a new applicant
          schema:
            type: object
        "500":
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

definitions:
  ErrorResponse:
    required:
      - success
      - status
      - message
    properties:
      success:
        type: boolean
      status: 
        type: integer
      message:
        type: string
        